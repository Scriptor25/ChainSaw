\inc "std/stdbool.csh"
\inc "std/stdio.csh"

\inc "aabb.csh"
\inc "hittable.csh"
\inc "hittable_list.csh"
\inc "interval.csh"
\inc "ray.csh"

@hittable_list {
    me!type = 'L';
    me!objects = vector();
}

@hittable_list(object: hittable*) {
    me!type = 'L';
    me!objects = vector();
    me!add(object);
}

@add:hittable_list(object: hittable*): void {
    me!objects.push_back(object);
    me!bbox = aabb(me!bbox, object!bounding_box());
}

@hit:hittable_list(r: ray, ray_t: interval, rec: hit_record*): bool {
    temp_rec: hit_record;
    hit_anything: bool = false;
    closest_so_far: flt64 = ray_t.max;

    for (i: int64; i < me!objects.size; ++i) {
        object: hittable* = me!objects[i];
        if (object!hit(r, interval(ray_t.min, closest_so_far), &temp_rec)) {
            hit_anything = true;
            closest_so_far = temp_rec.t;
            *rec = temp_rec;
        }
    }

    ret hit_anything;
}

@bounding_box:hittable_list:aabb = me!bbox;

@destroy:hittable_list:void = me!objects.destroy();
